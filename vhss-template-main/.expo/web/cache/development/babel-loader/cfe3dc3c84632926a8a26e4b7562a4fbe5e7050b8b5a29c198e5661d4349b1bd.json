{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  useEffect(function () {\n    if (error === 'Registration successful!') {\n      navigation.navigate('Login');\n    }\n  }, [error, navigation]);\n  var handleRegister = function handleRegister() {\n    if (username && password && confirmPassword) {\n      if (password === confirmPassword) {\n        setError('Registration successful!');\n      } else {\n        setError('Password and Confirm Password do not match');\n      }\n    } else {\n      setError('Please fill in all fields');\n    }\n  };\n  var navigateToLogin = function navigateToLogin() {\n    navigation.navigate('Login');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Register\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: setUsername\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      value: confirmPassword,\n      onChangeText: setConfirmPassword\n    }), error ? _jsx(Text, {\n      style: styles.error,\n      children: error\n    }) : null, _jsx(Button, {\n      title: \"Register\",\n      onPress: handleRegister\n    }), _jsx(Text, {\n      style: styles.loginLink,\n      onPress: navigateToLogin,\n      children: \"Already have an account? Login\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    height: 40,\n    width: '80%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10\n  },\n  loginLink: {\n    marginTop: 20,\n    color: 'blue',\n    textDecorationLine: 'underline'\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","error","setError","navigate","handleRegister","navigateToLogin","style","styles","container","children","title","input","placeholder","value","onChangeText","secureTextEntry","onPress","loginLink","create","flex","justifyContent","alignItems","fontSize","fontWeight","marginBottom","height","width","borderColor","borderWidth","paddingLeft","color","marginTop","textDecorationLine"],"sources":["C:/New folder/vhss-template-main/vhss-template-main/src/RegisterScreen.js"],"sourcesContent":["// RegisterScreen.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (error === 'Registration successful!') {\r\n      // Redirect to the 'Login' screen after a successful registration\r\n      // Replace 'Login' with the name of your login screen\r\n      navigation.navigate('Login');\r\n    }\r\n  }, [error, navigation]);\r\n\r\n  const handleRegister = () => {\r\n    // Perform registration logic here\r\n    // For simplicity, let's check if username, password, and confirmPassword are non-empty\r\n    if (username && password && confirmPassword) {\r\n      // Check if password and confirmPassword match\r\n      if (password === confirmPassword) {\r\n        // Registration successful, you can add your registration logic here\r\n        // For this example, let's just display a success message\r\n        setError('Registration successful!');\r\n      } else {\r\n        setError('Password and Confirm Password do not match');\r\n      }\r\n    } else {\r\n      setError('Please fill in all fields');\r\n    }\r\n  };\r\n\r\n  const navigateToLogin = () => {\r\n    // Navigate to the 'Login' screen\r\n    // Replace 'Login' with the name of your login screen\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Register</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChangeText={setUsername}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm Password\"\r\n        secureTextEntry\r\n        value={confirmPassword}\r\n        onChangeText={setConfirmPassword}\r\n      />\r\n      {error ? <Text style={styles.error}>{error}</Text> : null}\r\n      <Button title=\"Register\" onPress={handleRegister} />\r\n      <Text style={styles.loginLink} onPress={navigateToLogin}>\r\n        Already have an account? Login\r\n      </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    width: '80%',\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingLeft: 10,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    marginBottom: 10,\r\n  },\r\n  loginLink: {\r\n    marginTop: 20,\r\n    color: 'blue',\r\n    textDecorationLine: 'underline',\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}